{"version":3,"sources":["bandagram/shuffle.ts","bandagram/letters/hintLetter.tsx","bandagram/letters/stringToCharList.ts","bandagram/letters/generateActiveRow.tsx","bandagram/letters/generateGuessRow.tsx","bandagram/letters/compareStrings.ts","bandagram/Finished.tsx","bandagram/bandagram.tsx","bandagram/letters/randomString.ts","bandagram/data/quizbands.ts","App.tsx","reportWebVitals.js","index.js"],"names":["shuffle","array","randomIndex","currentIndex","length","Math","floor","random","LetterCard","styled","Card","_templateObject","_taggedTemplateLiteral","HintLetter","_ref","letter","backgroundColor","textColor","undefined","React","createElement","style","color","stringToCharList","str","toLowerCase","split","filter","char","generateActiveRow","input","letters","Fragment","remainingLetters","map","guessed","includes","index","findIndex","c","splice","evaluateLetters","key","generateGuessRow","guess","correctAnswer","guessLetter","notWrong","wrong","compareStrings","str1","str2","replace","trim","CenterPage","div","Finished","lastGuess","correct","Typography","variant","Row","_templateObject2","Page","_templateObject3","Bandagram","initMissingLetters","initFakeLetters","guesses","setGuesses","useState","text","setText","missingLetters","setMissingLetters","noFakeLetters","setNoFakeLetters","correctLetters","useMemo","slice","allFakeLetters","possible","i","charAt","randomString","fakeLetters","allLetters","onGuess","event","preventDefault","gameOver","align","sx","fontSize","onSubmit","Input","maxWidth","width","value","onChange","target","Button","type","onClick","bandNames","App","className","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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zCiB,EAAY,CACvB,YACA,cACA,eACA,kBACA,aACA,WACA,sBACA,QACA,OACA,aACA,YACA,YACA,eACA,UACA,QACA,cACA,oBACA,OACA,oBACA,eACA,SACA,mBACA,iBACA,SACA,cACA,sBACA,gBACA,SACA,wBACA,eACA,kBACA,cACA,cACA,QACA,UACA,YACA,kBACA,aACA,gBACA,QACA,2BACA,MACA,gBACA,KACA,WACA,SACA,oBACA,UACA,cACA,YACA,OACA,UACA,kBACA,WACA,mBACA,gBACA,YACA,WACA,cACA,gBACA,cACA,iBACA,iBACA,QACA,eACA,mBACA,SACA,eACA,sBACA,UACA,eACA,eACA,iBACA,WACA,SACA,MACA,SACA,WACA,eACA,aACA,QACA,YACA,qBACA,aACA,WACA,YACA,sBACA,OACA,iBACA,cACA,aACA,UACA,kBACA,UACA,eACA,QACA,mBACA,cACA,mBACA,aACA,cACA,cACA,mBACA,eACA,WACA,eACA,eACA,QACA,iBACA,UACA,iBACA,WACA,iBACA,aACA,mBACA,gBACA,aACA,QACA,yBACA,UACA,kBACA,2BACA,UACA,eACA,oBACA,UACA,qBACA,iBACA,WACA,+BACA,MACA,eACA,YACA,aACA,eACA,YACA,WACA,eACA,eACA,mBACA,WACA,oBACA,SACA,QACA,qBACA,iBACA,gBACA,mBACA,SACA,aACA,aACA,eACA,YACA,cACA,gBACA,gBACA,eACA,YACA,eACA,gBACA,SACA,SACA,qBACA,cACA,YACA,aACA,cACA,eACA,8BACA,cACA,iBACA,YACA,sBACA,aACA,yBACA,gBACA,OACA,WACA,aACA,gBACA,QACA,aACA,aACA,cACA,eACA,cACA,cACA,iBACA,SACA,oBACA,UACA,gBACA,cACA,OACA,UACA,eACA,gBACA,gBACA,QACA,oBACA,sBACA,yBACA,eACA,SACA,4BACA,cACA,kBACA,mBACA,QACA,sBACA,gBACA,OACA,UACA,OACA,aACA,kBACA,eACA,gBACA,iBACA,mBACA,SACA,YACA,SACA,gBACA,cACA,eACA,UACA,UACA,kBACA,gBACA,aACA,kBACA,YACA,cACA,SACA,cACA,cACA,cACA,gBACA,WACA,aACA,kBACA,oBACA,cACA,YACA,gBACA,kBACA,aACA,qBACA,qBACA,aACA,uBACA,WACA,MACA,UACA,gBACA,oBACA,eACA,YACA,kBACA,UACA,WACA,QACA,WACA,cACA,OACA,gBACA,UACA,uBACA,OACA,UACA,cACA,oCACA,OACA,gBACA,mBACA,eACA,kBACA,iBACA,gBACA,qBACA,aACA,UACA,gBACA,gBACA,YACA,WACA,YACA,gBACA,gBACA,YACA,aACA,iBACA,SACA,gBACA,aACA,QACA,YACA,eACA,mBACA,eACA,iBACA,WACA,iBACA,WACA,eACA,OACA,UACA,sBACA,oBACA,SACA,aACA,kBACA,aACA,eACA,kBACA,OACA,OACA,iBACA,SACA,uBACA,aACA,0BACA,0BACA,SACA,gBACA,WACA,UACA,mBACA,UACA,qBACA,iBACA,mBACA,cACA,QACA,YACA,eACA,SACA,qBACA,aACA,aACA,QACA,MACA,iBACA,eACA,eACA,eACA,UACA,mBACA,gBACA,mBACA,iBACA,sBACA,cACA,aACA,mCACA,gBACA,aACA,WACA,QACA,aACA,mBACA,QACA,YACA,eACA,gBACA,qCACA,YACA,WACA,uBACA,2BACA,cACA,iBACA,cACA,OACA,cACA,aACA,kBACA,WACA,iBACA,WACA,UACA,iBACA,oBACA,YACA,oBACA,gBACA,YACA,eACA,UACA,SACA,eACA,eACA,cACA,kBACA,iBACA,SACA,cACA,iBACA,QACA,aACA,eACA,WACA,YACA,iBACA,cACA,QACA,gBACA,2BACA,cACA,aACA,gBACA,aACA,YACA,WACA,WACA,cACA,gBACA,cACA,eACA,cACA,gBACA,aACA,aACA,MACA,gBACA,kBACA,kBACA,WACA,MACA,cACA,aACA,cACA,eACA,gBACA,sBACA,UACA,gBACA,oBACA,SACA,SACA,aACA,iBACA,eACA,WACA,YACA,gBACA,gBACA,OACA,OACA,UACA,iBACA,kBACA,OACA,kBACA,UACA,QACA,YACA,iBACA,eACA,WACA,uBACA,aACA,SACA,WACA,0BACA,eACA,kBACA,sBACA,cACA,YACA,aACA,SACA,cACA,sBACA,cACA,cACA,WACA,gCACA,OACA,mBACA,cACA,mBACA,kBACA,YACA,cACA,OACA,eACA,gBACA,cACA,gBACA,eACA,QACA,kBACA,oBACA,gBACA,gBACA,kBACA,WACA,sBACA,QACA,gBACA,qBACA,kBACA,aACA,uBACA,YACA,SACA,eACA,SACA,QACA,qBACA,MACA,MACA,WACA,gBACA,gBACA,sBACA,WACA,eACA,cACA,UACA,aACA,eACA,iBACA,SACA,eACA,SACA,iBACA,SACA,gBACA,SACA,oBACA,aACA,gBACA,iBACA,YACA,gBACA,kBACA,gBACA,mBACA,gBACA,aACA,iBACA,cACA,aACA,cACA,QACA,gBACA,UACA,mBACA,aACA,cACA,mBACA,QACA,gBACA,WACA,YACA,2BACA,eACA,UACA,WACA,kBACA,oBACA,qBACA,0BACA,aACA,eACA,aACA,qBACA,cACA,+BACA,QACA,eACA,QACA,YACA,kBACA,SACA,sBACA,eACA,SACA,WACA,YACA,eACA,kBACA,iBACA,SACA,WACA,cACA,UACA,YACA,YACA,YACA,WACA,eACA,gBACA,YACA,qCACA,SACA,mBACA,gBACA,gBACA,YACA,YACA,wBACA,cACA,aACA,aACA,2BACA,iBACA,iBACA,YACA,oBACA,oBACA,UACA,cACA,QACA,SACA,iBACA,YACA,YACA,aACA,cACA,UACA,QACA,cACA,eACA,OACA,iBACA,YACA,YACA,qBACA,YACA,eACA,SACA,cACA,UACA,kBACA,WACA,eACA,aACA,eACA,kBACA,aACA,MACA,QACA,gBACA,OACA,sBACA,eACA,UC5nBaC,MAXf,WACE,MAAM5D,EAAgBiC,kBAAQ,IACrB0B,EAAUnG,KAAKC,MAAMD,KAAKE,SAAWiG,EAAUpG,SACrD,IACH,OACEe,IAAAC,cAAA,OAAKsF,UAAU,OACbvF,IAAAC,cAAC6C,EAAS,CAACpB,cAAeA,EAAeqB,mBAAoB,EAAGC,gBAAiB,MCCxEwC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKlG,IAAiD,IAAhDoG,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASxG,EACpEoG,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDdW,IAASC,OACPrG,IAAAC,cAACD,IAAMsG,WAAU,KACftG,IAAAC,cAACqF,EAAG,OAENiB,SAASC,eAAe,SAM1BhB","file":"static/js/main.9cc541de.chunk.js","sourcesContent":["export function shuffle<T>(array: T[]): T[] {\n  let currentIndex = array.length,  randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex > 0) {\n\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}","import {Card} from \"@mui/material\";\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\n\ninterface Props {\n  letter: string;\n  backgroundColor?: string;\n}\n\nconst LetterCard = styled(Card)`\n  width: 25px;\n  height: 25px;\n  font-size: 15px;\n  font-weight: bold;\n  text-transform: uppercase;\n  display: inline-block;\n  margin: 3px;\n`\n\nexport const HintLetter = ({letter, backgroundColor}: Props): React.JSX.Element => {\n  const textColor = backgroundColor ? \"white\" : undefined;\n  return (<LetterCard style={{backgroundColor: backgroundColor, color: textColor}}>{letter}</LetterCard>);\n}","export function stringToCharList(str: string): string[] {\n  return str.toLowerCase()\n    .split(\"\")\n    .filter((char) => char !== \" \")\n}","import {HintLetter} from \"./hintLetter\";\nimport React from \"react\";\nimport {stringToCharList} from \"./stringToCharList\";\n\nexport function evaluateLetters(input: string, letters: string[]) {\n  let remainingLetters: string[] = stringToCharList(input);\n  return letters.map(letter => {\n    const guessed = remainingLetters.includes(letter);\n    if (guessed) {\n      const index = remainingLetters.findIndex((c) => c === letter)\n      remainingLetters.splice(index, 1)\n    }\n    return { letter, guessed };\n  });\n}\nexport function generateActiveRow(input: string, letters: string[]) {\n  return (<>{evaluateLetters(input, letters).map(({letter, guessed}, index) => {\n    const backgroundColor = guessed ? \"orange\" :  undefined;\n    return <HintLetter letter={letter} backgroundColor={backgroundColor} key={index} />;\n  })}</>);\n}","import {HintLetter} from \"./hintLetter\";\nimport React from \"react\";\nimport {stringToCharList} from \"./stringToCharList\";\n\nfunction evaluateLetters(guess: string, correctAnswer: string) {\n  const letters = stringToCharList(correctAnswer);\n  let remainingLetters: string[] = [...letters];\n  return stringToCharList(guess).map((guessLetter, index) => {\n    const notWrong = remainingLetters.includes(guessLetter);\n    if (notWrong) {\n      const index = remainingLetters.findIndex((c) => c === guessLetter)\n      remainingLetters.splice(index, 1)\n    }\n    const guessed = guessLetter === letters[index];\n    return { guessLetter, guessed , wrong: !notWrong};\n  });\n}\n\n/**\n * Generates a row of letters with the correct letters highlighted in green and the letters not included in answer in red.\n *\n * todo: when you use multiple of a letter and a later one is green, the earlier ones should maybe be red?\n * @param guess\n * @param correctAnswer\n */\nexport function generateGuessRow(guess: string, correctAnswer: string) {\n  return (<>{evaluateLetters(guess, correctAnswer).map(({guessLetter, guessed, wrong}, index) => {\n    const backgroundColor = guessed ? \"green\" : wrong ? \"red\" : undefined;\n    return <HintLetter letter={guessLetter} backgroundColor={backgroundColor} key={index} />;\n  })}</>);\n}","export function compareStrings(str1: string, str2:string): boolean {\n  //add more whitespace?\n  return str1.toLowerCase().replace(' ', '').trim() === str2.toLowerCase().replace(' ', '').trim();\n}","import {Typography} from \"@mui/material\";\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport {compareStrings} from \"./letters/compareStrings\";\n\nconst CenterPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\ninterface Props {\n  correctAnswer: string;\n  lastGuess: string;\n}\n\nexport const Finished = ({correctAnswer, lastGuess}: Props) => {\n  const correct =  compareStrings(lastGuess, correctAnswer);\n  return (\n    <CenterPage>\n      {correct ? (\n        <>\n          <Typography variant=\"body1\"> {correctAnswer}</Typography>\n          <h1>Good job!</h1>\n        </>\n    ) : (\n      <>\n        <Typography variant=\"body1\"> {correctAnswer}</Typography>\n        <h1>So close! Better luck next time...</h1>\n      </>\n    )}\n    </CenterPage>\n  );\n};","import React, {FormEvent, useMemo, useState} from 'react';\nimport {shuffle} from \"./shuffle\";\nimport styled from \"@emotion/styled\";\nimport {Button, Input, Typography} from \"@mui/material\";\nimport {generateActiveRow} from \"./letters/generateActiveRow\";\nimport {stringToCharList} from \"./letters/stringToCharList\";\nimport {generateGuessRow} from \"./letters/generateGuessRow\";\nimport {compareStrings} from \"./letters/compareStrings\";\nimport {randomString} from \"./letters/randomString\";\nimport {Finished} from \"./Finished\";\n\nconst Row = styled.div`\n  display: inline-block;\n`;\nconst CenterPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  `;\nconst Page = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  align-items: flex-start;\n  margin-top: 50px;\n`;\n\ninterface Props {\n  correctAnswer: string;\n  initMissingLetters: number;\n  initFakeLetters: number;\n}\n\nexport const Bandagram = ({correctAnswer, initMissingLetters, initFakeLetters}: Props) => {\n  const [guesses, setGuesses] = useState<string[]>([])\n  const [text, setText] = React.useState('');\n  const [missingLetters, setMissingLetters] = useState(initMissingLetters)\n  const [noFakeLetters, setNoFakeLetters] = useState(initFakeLetters)\n\n  //Overusing useMemo to avoid activeRow re-renders when typing\n  const correctLetters = useMemo((): string[] => {\n    return shuffle(stringToCharList(correctAnswer.toLowerCase()));\n  }, [correctAnswer])\n  const letters = useMemo(() => {\n    return missingLetters > 0 ? correctLetters.slice(0, -missingLetters) : correctLetters\n  }, [missingLetters, correctLetters]);\n  const allFakeLetters = useMemo((): string[] => {\n    return stringToCharList(randomString(initFakeLetters));\n  }, [initFakeLetters])\n  const fakeLetters = useMemo(() => {\n    return allFakeLetters.slice(0, noFakeLetters);\n  }, [noFakeLetters, allFakeLetters]);\n  const allLetters = useMemo(() => {\n    return shuffle([...letters, ...fakeLetters]);\n  }, [letters, fakeLetters]);\n  const onGuess = (event: FormEvent) => {\n    event.preventDefault()\n    if (guesses.length % 2 === 0 && noFakeLetters > 0) {\n      setNoFakeLetters(noFakeLetters - 1);\n    }\n    if (guesses.length % 2 === 1 && missingLetters > 0) {\n      setMissingLetters(missingLetters - 1);\n    }\n    setGuesses([...guesses, text])\n    setText('')\n  }\n  const gameOver = (guesses.length && compareStrings(guesses[guesses.length - 1], correctAnswer)) || guesses.length > 5;\n\n  return (\n    <CenterPage>\n      <Page >\n        {guesses.map((guess, i) => {\n          return (<Row key={i}>\n            {generateGuessRow(guess, correctAnswer)}\n          </Row>)\n        })}\n        {gameOver ?\n          (<Finished correctAnswer={correctAnswer} lastGuess={guesses[guesses.length - 1]}/>) :\n          (<>\n            <Typography variant=\"body2\" align=\"center\" sx={{fontSize: 12}}>\n              Missing letters: {missingLetters} Fake letters: {noFakeLetters}\n            </Typography>\n            <Row>\n              {generateActiveRow(text, allLetters)}\n            </Row>\n            <form onSubmit={onGuess}>\n              <Input style={{maxWidth: 300, width: '100%'}} value={text} onChange={(event) => setText(event.target.value)} />\n              <Button type=\"submit\" onClick={onGuess}>Guess</Button>\n            </form>\n          </>)\n        }\n      </Page>\n    </CenterPage>\n  );\n}","export function randomString(length: number): string {\n  let text = \"\";\n  const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n  for (let i = 0; i < length; i++)\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n  return text;\n}","//Band från quizzen\nexport const bandNames = [\n  'Lady Gaga',\n  'Miley Cyrus',\n  'Taylor Swift',\n  'Aretha Franklin',\n  'Ed Sheeran',\n  'No Doubt',\n  'Thomas Stenström',\n  'AC/DC',\n  'Cher',\n  'Elton John',\n  'Green Day',\n  'Icona Pop',\n  'Lana Del Rey',\n  'Nirvana',\n  'Robyn',\n  'The Beatles',\n  'The Lonely Island',\n  'ABBA',\n  'Alanis Morissette',\n  'Alice Cooper',\n  'Avicii',\n  'Bowling For Soup',\n  'Britney Spears',\n  'Carola',\n  'David Bowie',\n  'Death Cab for Cutie',\n  'Elvis Presley',\n  'Eminem',\n  'Håkan Hellström',\n  'Harry Styles',\n  'Imagine Dragons',\n  'Johnny Cash',\n  'Linkin Park',\n  'Lorde',\n  'Madonna',\n  'Manu Chao',\n  'Michael Jackson',\n  'Nickelback',\n  'Oskar Linnros',\n  'Queen',\n  'Rage Against The Machine',\n  'Sia',\n  'The Cardigans',\n  'U2',\n  'YUNGBLUD',\n  '*NSYNC',\n  'A Day To Remember',\n  'A*Teens',\n  'Ace of Base',\n  'Aerosmith',\n  'Aqua',\n  'Ava Max',\n  'Backstreet Boys',\n  'Bee Gees',\n  'Belinda Carlisle',\n  'Billie Eilish',\n  'blink-182',\n  'Bon Jovi',\n  'Bright Eyes',\n  'Broder Daniel',\n  'Bryan Adams',\n  'Camila Cabello',\n  'Céline Dion',\n  'Darin',\n  'Dire Straits',\n  'Eagle-Eye Cherry',\n  'Eagles',\n  'Ebba Grön',\n  'Echo & the Bunnymen',\n  'Erasure',\n  'Eric Clapton',\n  'Foo Fighters',\n  'Geri Halliwell',\n  'Gorillaz',\n  'Halsey',\n  'HIM',\n  'Hozier',\n  'Imperiet',\n  'Jan Johansen',\n  'Juice WRLD',\n  'Kesha',\n  'Lambretta',\n  'Lars Winnerbäck',\n  'Lily Allen',\n  'Maskinen',\n  'Meat Loaf',\n  'My Chemical Romance',\n  'Nena',\n  'Olivia Rodrigo',\n  'Patti Smith',\n  'Paul Simon',\n  'Ramones',\n  'Robbie Williams',\n  'Shakira',\n  'Shawn Mendes',\n  'Snook',\n  'Ted Gärdestad',\n  'Tenacious D',\n  'The Interrupters',\n  'The Police',\n  'Tina Turner',\n  'Tomas Ledin',\n  'Uno Svenningsson',\n  'Zara Larsson',\n  '24kGoldn',\n  'Aaron Carter',\n  'Adam Lambert',\n  'Adele',\n  'Afasi & Filthy',\n  'Afroman',\n  'Alien Ant Farm',\n  'Ansiktet',\n  'Arctic Monkeys',\n  'Arvingarna',\n  'Augusto Giardino',\n  'Barry Manilow',\n  'Billy Joel',\n  'Birdy',\n  'Björn Rosenström',\n  'Blondie',\n  'Bloodhound Gang',\n  'Bob Marley & The Wailers',\n  'Bolaget',\n  'Bonnie Tyler',\n  'Bruce Springsteen',\n  'Caesars',\n  'Christina Aguilera',\n  'Cobra Starship',\n  'Coldplay',\n  'Creedence Clearwater Revival',\n  'D12',\n  'Daddy Yankee',\n  'Daft Punk',\n  'Diana Ross',\n  'Die Antwoord',\n  'Disturbed',\n  'Doja Cat',\n  'Dolly Parton',\n  'Donna Summer',\n  'Door van Boeckel',\n  'Dua Lipa',\n  'Dusty Springfield',\n  'E-Type',\n  'Eamon',\n  'Earth, Wind & Fire',\n  'Ellie Goulding',\n  'Elliott Smith',\n  'Enrique Iglesias',\n  'Europe',\n  'Eurythmics',\n  'Faith Hill',\n  'Fall Out Boy',\n  'Far & Son',\n  'Fatboy Slim',\n  'First Aid Kit',\n  'Fleetwood Mac',\n  'Fools Garden',\n  'Glee Cast',\n  'Guns N Roses',\n  'Gyllene Tider',\n  'Hanson',\n  'Hinder',\n  'Hva Snakker Du Om?',\n  'Iggy Azalea',\n  'In Flames',\n  'Irene Cara',\n  'Iron Maiden',\n  'Jeff Buckley',\n  'Joan Jett & the Blackhearts',\n  'John Lennon',\n  'Jonas Brothers',\n  'Kate Bush',\n  'Katrina & The Waves',\n  'Katy Perry',\n  'KC & The Sunshine Band',\n  'Kenny Loggins',\n  'kent',\n  'Kid Rock',\n  'Kim Carnes',\n  'Kylie Minogue',\n  'Laleh',\n  'Lasse Holm',\n  'Lazlo Bane',\n  'LeAnn Rimes',\n  'Led Zeppelin',\n  'Limp Bizkit',\n  'Lisa Ekdahl',\n  'Lisa Miskovsky',\n  'Loreen',\n  'Machine Gun Kelly',\n  'Madness',\n  'Mange Schmidt',\n  'Melody Club',\n  'MIKA',\n  'Miss Li',\n  'Moneybrother',\n  'Mr. President',\n  'Myra Granberg',\n  'Nanne',\n  'Natalie Imbruglia',\n  'Natasha Bedingfield',\n  'Navid Modiri & Gudarna',\n  'Neil Diamond',\n  'Newkid',\n  'Nick Cave & The Bad Seeds',\n  'Nicki Minaj',\n  'Nine Inch Nails',\n  'Norman Greenbaum',\n  'Oasis',\n  'Of Monsters and Men',\n  'One Direction',\n  'Orup',\n  'Outkast',\n  'P!nk',\n  'Papa Roach',\n  'Patrik Isaksson',\n  'Peps Persson',\n  'Pet Shop Boys',\n  'Phantom Planet',\n  'Pontiak Johanzon',\n  'R.E.M.',\n  'Radiohead',\n  'Rancid',\n  'Reel Big Fish',\n  'Rick Astley',\n  'Ricky Martin',\n  'Rihanna',\n  'Roxette',\n  'Run–D.M.C.',\n  'Rupert Holmes',\n  'Ryan Adams',\n  'Scissor Sisters',\n  'September',\n  'Sex Pistols',\n  'Sigrid',\n  'Simple Plan',\n  'Smash Mouth',\n  'Snow Patrol',\n  'Stevie Wonder',\n  'Survivor',\n  'Teddybears',\n  'The Cranberries',\n  'The Dandy Warhols',\n  'The Killers',\n  'The Kooks',\n  'The Offspring',\n  'The Proclaimers',\n  'The Rasmus',\n  'The Rolling Stones',\n  'The Tough Alliance',\n  'The Weeknd',\n  'They Might Be Giants',\n  'Timbuktu',\n  'TLC',\n  'Tove Lo',\n  'Tracy Chapman',\n  'Twenty One Pilots',\n  'Van Morrison',\n  'Vance Joy',\n  'Veronica Maggio',\n  'Volbeat',\n  'Westlife',\n  'Yazoo',\n  'Young MC',\n  '2 Unlimited',\n  '2Pac',\n  '4 Non Blondes',\n  '50 Cent',\n  'A Tribe Called Quest',\n  'a-ha',\n  'Aaliyah',\n  'Adam Tensta',\n  'Ágústa Eva Erlendsdóttir',\n  'Akon',\n  'Alannah Myles',\n  'Albin Lee Meldau',\n  'Alessia Cara',\n  'Alexander Rybak',\n  'Alexandra Stan',\n  'Alexi Murdoch',\n  'Alice In Videoland',\n  'All Saints',\n  'America',\n  'Amy Macdonald',\n  'Amy Winehouse',\n  'Anastacia',\n  'Ane Brun',\n  'Anna Book',\n  'Anna Ternheim',\n  'Anthem Lights',\n  'Anti-Flag',\n  'Architects',\n  'Ashlee Simpson',\n  'Atreyu',\n  'Avril Lavigne',\n  'AWOLNATION',\n  'B.o.B',\n  'B*Witched',\n  'Babyshambles',\n  'Bad Cash Quartet',\n  'Bad Religion',\n  'Band of Horses',\n  'Barbados',\n  'Barns Courtney',\n  'Bastille',\n  'Beastie Boys',\n  'Beck',\n  'Becky G',\n  'Belle and Sebastian',\n  'Benjamin Ingrosso',\n  'Berlin',\n  'Beyoncé',\n  'Bianca Ingrosso',\n  'Billy Paul',\n  'Billy Talent',\n  'Black Eyed Peas',\n  'Blue',\n  'Blur',\n  'Bobby Caldwell',\n  'Boston',\n  'Bring Me The Horizon',\n  'Bruno Mars',\n  'Buena Vista Social Club',\n  'Bullet For My Valentine',\n  'Busted',\n  'Calvin Harris',\n  'Caramell',\n  'Cardi B',\n  'Carly Rae Jepsen',\n  'Cascada',\n  'Charlotte Perrelli',\n  'Chesney Hawkes',\n  'Christina Milian',\n  'Chuck Berry',\n  'Ciara',\n  'Clara Mae',\n  'Clean Bandit',\n  'Coolio',\n  'Cornelis Vreeswijk',\n  'Cornershop',\n  'Crazy Town',\n  'Creed',\n  'Cue',\n  'Curtis Stigers',\n  'Cutting Crew',\n  'Cyndi Lauper',\n  'Cypress Hill',\n  'Da Buzz',\n  'Daniel Adams-Ray',\n  'Daniel Powter',\n  'David Hasselhoff',\n  'David Lee Roth',\n  'Deep Blue Something',\n  'Def Leppard',\n  'Del Amitri',\n  'DJ Jazzy Jeff & The Fresh Prince',\n  'Docent Död',\n  'Don McLean',\n  'Don Omar',\n  'Drake',\n  'Drömhus',\n  'Dropkick Murphys',\n  'Duffy',\n  'Echosmith',\n  'Eddie Murphy',\n  'Édith Piaf',\n  'Edward Sharpe & The Magnetic Zeros',\n  'Eiffel 65',\n  'Eldkvarn',\n  'Electric Banana Band',\n  'Electric Light Orchestra',\n  'Elov & Beny',\n  'Elvis Costello',\n  'Emma Bunton',\n  'Enya',\n  'Eric Carmen',\n  'Eric Saade',\n  'Eros Ramazzotti',\n  'Familjen',\n  'Felicia Takman',\n  'Flo Rida',\n  'Flobots',\n  'Flogging Molly',\n  'Florence Valentin',\n  'Foreigner',\n  'Foster The People',\n  'Frank Sinatra',\n  'Freestyle',\n  'Frej Larsson',\n  'Friends',\n  'Fronda',\n  'Gary Portnoy',\n  'Gavin DeGraw',\n  'George Ezra',\n  'George Harrison',\n  'George Michael',\n  'Gina G',\n  'Girls Aloud',\n  'Good Charlotte',\n  'Graaf',\n  'Günther',\n  'Gwen Stefani',\n  'Haddaway',\n  'Halestorm',\n  'Hannah Montana',\n  'Hans Zimmer',\n  'Harpo',\n  'Harry Nilsson',\n  'High School Musical Cast',\n  'Hilary Duff',\n  'Hoobastank',\n  'Hot Chocolate',\n  'Hugh Grant',\n  'iann dior',\n  'Ice Cube',\n  'Iggy Pop',\n  'Imogen Heap',\n  'Infinite Mass',\n  'Iron & Wine',\n  'Jace Everett',\n  'James Blunt',\n  'Janet Jackson',\n  'Jason Mraz',\n  'Jean Stout',\n  'Jem',\n  'Jennifer Rush',\n  'Jerry Lee Lewis',\n  'Jesse McCartney',\n  'Jessie J',\n  'Jet',\n  'Jimmy Cliff',\n  'Joe Cocker',\n  'John Denver',\n  'John Farnham',\n  'Joni Mitchell',\n  'José González',\n  'Journey',\n  'Justin Bieber',\n  'Justin Timberlake',\n  'K\\'NAAN',\n  'Kansas',\n  'Kanye West',\n  'Kazutaka Ishii',\n  'Keala Settle',\n  'Kid Cudi',\n  'Kim Wilde',\n  'King Princess',\n  'Kings of Leon',\n  'KISS',\n  'Korn',\n  'La Roux',\n  'Lady Sovereign',\n  'LCD Soundsystem',\n  'Lena',\n  'Lena Philipsson',\n  'LÉON',\n  'Let 3',\n  'Lil Wayne',\n  'Linda Sundblad',\n  'Lisa Nilsson',\n  'Lou Reed',\n  'Ludwig van Beethoven',\n  'Luis Fonsi',\n  'Lustra',\n  'Lykke Li',\n  'Macklemore & Ryan Lewis',\n  'Magnum Bonum',\n  'Magnus & Brasse',\n  'Magnus Härenstam',\n  'Måneskin',\n  'Marc Cohn',\n  'Maria Mena',\n  'MARINA',\n  'Mark Ronson',\n  'Markus Krunegård',\n  'Marvin Gaye',\n  'Masked Wolf',\n  'Mattafix',\n  'Me First and the Gimme Gimmes',\n  'Meja',\n  'Melanie Martinez',\n  'Men At Work',\n  'Men Without Hats',\n  'Meredith Brooks',\n  'Metallica',\n  'MexicoFALLZ',\n  'MGMT',\n  'Midnight Oil',\n  'Mike Oldfield',\n  'Millencolin',\n  'Miriam Bryant',\n  'Modest Mouse',\n  'Modjo',\n  'Molly Sandén',\n  'Mötley Crüe',\n  'Nancy Sinatra',\n  'Nat King Cole',\n  'Nationalteatern',\n  'Nazareth',\n  'Neil Patrick Harris',\n  'Nelly',\n  'Nelly Furtado',\n  'Neutral Milk Hotel',\n  'New Found Glory',\n  'Nick Jonas',\n  'Niklas Strömstedt',\n  'Nine Days',\n  'NONONO',\n  'Norlie & KKV',\n  'O-Zone',\n  'OK Go',\n  'Olivia Newton-John',\n  'OMI',\n  'OPM',\n  'Owl City',\n  'Ozzy Osbourne',\n  'Paavo Kerosuo',\n  'Panic! At The Disco',\n  'Paramore',\n  'Paris Hilton',\n  'Pat Benatar',\n  'Peaches',\n  'Per Gessle',\n  'Peter LeMarc',\n  'Peter Lundblad',\n  'Petter',\n  'Phil Collins',\n  'Pixies',\n  'Plain White Ts',\n  'Poison',\n  'Primal Scream',\n  'Promoe',\n  'Public Image Ltd.',\n  'Quinn XCII',\n  'Ragnar Grippe',\n  'Rajiv Surendra',\n  'Rammstein',\n  'Rascal Flatts',\n  'Raymond & Maria',\n  'Rebecca Black',\n  'Rick Springfield',\n  'Roberta Flack',\n  'Robin Cook',\n  'Robin Sparkles',\n  'Rod Stewart',\n  'Roffe Ruff',\n  'Roy Orbison',\n  'Rufus',\n  'Russell Brand',\n  'Sabaton',\n  'Sahara Hotnights',\n  'Säkert!',\n  'Salt-N-Pepa',\n  'Samuel E. Wright',\n  'Sarek',\n  'Savage Garden',\n  'Saweetie',\n  'Scorpions',\n  'Selena Gomez & The Scene',\n  'Shania Twain',\n  'Shebang',\n  'Sheppard',\n  'Shout Out Louds',\n  'Simon & Garfunkel',\n  'Sinéad O Connor',\n  'SMÅJÄVLAFÖTTER',\n  'Snoop Dogg',\n  'Sonny & Cher',\n  'Soulja Boy',\n  'Spanish Love Songs',\n  'Spice Girls',\n  'Stefán Karl Stefánsson',\n  'Steps',\n  'Stevie Nicks',\n  'Sting',\n  'Sugarcult',\n  'Sugarplum Fairy',\n  'Sum 41',\n  'Super Furry Animals',\n  'Suzanne Vega',\n  'T. Rex',\n  't.A.T.u.',\n  'Take That',\n  'Taylor Dayne',\n  'Tears For Fears',\n  'Teddy Scholten',\n  'Terra ',\n  'The 1975',\n  'The Animals',\n  'The Ark',\n  'The Clash',\n  'The Coral',\n  'The Corrs',\n  'The Cure',\n  'The Darkness',\n  'The Fratellis',\n  'The Hives',\n  'The Hollywood Prime Time Orchestra',\n  'The HU',\n  'The Human League',\n  'The Jackson 5',\n  'The Kid LAROI',\n  'The Kinks',\n  'The Knack',\n  'The Mamas & The Papas',\n  'The Pierces',\n  'The Script',\n  'The Sounds',\n  'The Tallest Man On Earth',\n  'The Ting Tings',\n  'The Undertones',\n  'The Verve',\n  'The Weather Girls',\n  'The White Stripes',\n  'The Who',\n  'The Wombats',\n  'Theoz',\n  'Titiyo',\n  'Tjenare Kungen',\n  'Tom Jones',\n  'Tom Petty',\n  'Tone Norum',\n  'Tones And I',\n  'Toy-Box',\n  'Train',\n  'Transplants',\n  'Travie McCoy',\n  'Troy',\n  'Twisted Sister',\n  'Van Halen',\n  'Vengaboys',\n  'Victoria Silvstedt',\n  'Vitamin C',\n  'Wakey!Wakey!',\n  'Weezer',\n  'Wet Wet Wet',\n  'Wheatus',\n  'Whitney Houston',\n  'Wiktoria',\n  'Will Ferrell',\n  'Will Smith',\n  'XXXTENTACION',\n  'Yeah Yeah Yeahs',\n  'Yellowcard',\n  'Yes',\n  'Ylvis',\n  'You Me At Six',\n  'Yuna',\n  'Yusuf / Cat Stevens',\n  'Zach Sobiech',\n  'ZZ Top'\n  ];\n","import './App.css';\nimport {Bandagram} from \"./bandagram/bandagram\";\nimport React, {useMemo} from 'react';\nimport {bandNames} from \"./bandagram/data/quizbands\";\n\nfunction App() {\n  const correctAnswer = useMemo(() => {\n    return bandNames[Math.floor(Math.random() * bandNames.length)];\n  }, []);\n  return (\n    <div className=\"App\">\n      <Bandagram correctAnswer={correctAnswer} initMissingLetters={2} initFakeLetters={2}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}