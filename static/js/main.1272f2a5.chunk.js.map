{"version":3,"sources":["bandagram/shuffle.ts","bandagram/letters/hintLetter.tsx","bandagram/letters/stringToCharList.ts","bandagram/letters/generateActiveRow.tsx","bandagram/letters/generateGuessRow.tsx","bandagram/letters/compareStrings.ts","bandagram/Finished.tsx","bandagram/bandagram.tsx","bandagram/letters/randomString.ts","bandagram/data/properlengthbands.ts","App.tsx","reportWebVitals.js","index.js"],"names":["shuffle","array","randomIndex","currentIndex","length","Math","floor","random","LetterCard","styled","Card","_templateObject","_taggedTemplateLiteral","HintLetter","_ref","letter","backgroundColor","textColor","undefined","React","createElement","style","color","stringToCharList","str","toLowerCase","split","filter","char","generateActiveRow","input","letters","Fragment","remainingLetters","map","guessed","includes","index","findIndex","c","splice","evaluateLetters","key","generateGuessRow","guess","correctAnswer","fakeLetters","guessLetter","notWrong","wrong","compareStrings","str1","str2","replace","trim","CenterPage","div","Finished","lastGuess","correct","Typography","variant","Row","_templateObject2","Page","_templateObject3","Bandagram","initMissingLetters","initFakeLetters","guesses","setGuesses","useState","text","setText","missingLetters","setMissingLetters","noFakeLetters","setNoFakeLetters","correctLetters","useMemo","slice","allFakeLetters","possible","i","charAt","randomString","allLetters","onGuess","event","preventDefault","gameOver","align","sx","fontSize","onSubmit","Input","maxWidth","width","value","onChange","target","Button","type","onClick","bandNames","App","className","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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CAACC,KAAK,SAASC,QAAShB,GAAS,cEvFzCiB,EAAY,CACvB,YACA,cACA,eACA,aACA,WACA,aACA,YACA,YACA,eACA,UACA,cACA,eACA,cACA,eACA,cACA,cACA,UACA,YACA,aACA,WACA,UACA,cACA,YACA,WACA,YACA,WACA,cACA,cACA,iBACA,eACA,eACA,UACA,eACA,eACA,WACA,WACA,eACA,aACA,YACA,aACA,WACA,YACA,cACA,aACA,UACA,UACA,eACA,cACA,aACA,cACA,cACA,eACA,WACA,eACA,eACA,UACA,WACA,aACA,aACA,UACA,UACA,eACA,UACA,WACA,eACA,YACA,aACA,eACA,YACA,WACA,eACA,eACA,WACA,aACA,aACA,eACA,YACA,cACA,gBACA,eACA,YACA,eACA,cACA,YACA,aACA,cACA,eACA,cACA,YACA,aACA,WACA,aACA,aACA,aACA,cACA,eACA,cACA,cACA,UACA,cACA,eACA,cACA,UACA,aACA,eACA,gBACA,YACA,gBACA,cACA,eACA,UACA,UACA,kBACA,aACA,YACA,cACA,cACA,cACA,cACA,WACA,aACA,cACA,YACA,aACA,aACA,WACA,eACA,YACA,UACA,WACA,WACA,cACA,gBACA,UACA,cACA,eACA,aACA,UACA,YACA,WACA,YACA,YACA,aACA,aACA,YACA,eACA,WACA,WACA,eACA,aACA,aACA,eACA,aACA,WACA,UACA,cACA,YACA,eACA,aACA,aACA,eACA,eACA,eACA,cACA,aACA,gBACA,aACA,WACA,aACA,YACA,eACA,gBACA,YACA,WACA,cACA,cACA,cACA,aACA,WACA,WACA,UACA,YACA,YACA,eACA,UACA,eACA,eACA,cACA,cACA,aACA,eACA,WACA,YACA,cACA,cACA,aACA,aACA,YACA,WACA,WACA,cACA,cACA,eACA,cACA,aACA,aACA,WACA,cACA,aACA,cACA,eACA,UACA,aACA,eACA,WACA,YACA,gBACA,YACA,eACA,WACA,aACA,WACA,eACA,cACA,YACA,aACA,cACA,cACA,cACA,WACA,cACA,YACA,cACA,eACA,cACA,eACA,kBACA,oBACA,gBACA,WACA,aACA,YACA,eACA,WACA,WACA,eACA,cACA,UACA,aACA,eACA,eACA,aACA,YACA,aACA,cACA,aACA,cACA,UACA,aACA,cACA,WACA,YACA,eACA,UACA,WACA,aACA,eACA,aACA,cACA,eACA,YACA,eACA,WACA,YACA,eACA,WACA,cACA,YACA,YACA,YACA,WACA,eACA,YACA,gBACA,gBACA,YACA,YACA,cACA,aACA,aACA,YACA,cACA,YACA,YACA,aACA,cACA,UACA,cACA,eACA,YACA,YACA,YACA,cACA,UACA,WACA,eACA,aACA,aACA,gBACA,gBCtSaC,MAXf,WACE,MAAM5D,EAAgBkC,kBAAQ,IACrByB,EAAUnG,KAAKC,MAAMD,KAAKE,SAAWiG,EAAUpG,SACrD,IACH,OACEe,IAAAC,cAAA,OAAKsF,UAAU,OACbvF,IAAAC,cAAC8C,EAAS,CAACrB,cAAeA,EAAesB,mBAAoB,EAAGC,gBAAiB,MCAxEuC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKlG,IAAiD,IAAhDoG,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASxG,EACpEoG,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDdW,IAASC,OACPrG,IAAAC,cAACD,IAAMsG,WAAU,KACftG,IAAAC,cAACqF,EAAG,OAENiB,SAASC,eAAe,SAM1BhB","file":"static/js/main.1272f2a5.chunk.js","sourcesContent":["export function shuffle<T>(array: T[]): T[] {\n  let currentIndex = array.length,  randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex > 0) {\n\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}","import {Card} from \"@mui/material\";\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\n\ninterface Props {\n  letter: string;\n  backgroundColor?: string;\n}\n\nconst LetterCard = styled(Card)`\n  width: 25px;\n  height: 25px;\n  font-size: 15px;\n  font-weight: bold;\n  text-transform: uppercase;\n  display: inline-block;\n  margin: 3px;\n`\n\nexport const HintLetter = ({letter, backgroundColor}: Props): React.JSX.Element => {\n  const textColor = backgroundColor ? \"white\" : undefined;\n  return (<LetterCard style={{backgroundColor: backgroundColor, color: textColor}}>{letter}</LetterCard>);\n}","export function stringToCharList(str: string): string[] {\n  return str.toLowerCase()\n    .split(\"\")\n    .filter((char) => char !== \" \")\n}","import {HintLetter} from \"./hintLetter\";\nimport React from \"react\";\nimport {stringToCharList} from \"./stringToCharList\";\n\nexport function evaluateLetters(input: string, letters: string[]) {\n  let remainingLetters: string[] = stringToCharList(input);\n  return letters.map(letter => {\n    const guessed = remainingLetters.includes(letter);\n    if (guessed) {\n      const index = remainingLetters.findIndex((c) => c === letter)\n      remainingLetters.splice(index, 1)\n    }\n    return { letter, guessed };\n  });\n}\nexport function generateActiveRow(input: string, letters: string[]) {\n  return (<>{evaluateLetters(input, letters).map(({letter, guessed}, index) => {\n    const backgroundColor = guessed ? \"orange\" :  undefined;\n    return <HintLetter letter={letter} backgroundColor={backgroundColor} key={index} />;\n  })}</>);\n}","import {HintLetter} from \"./hintLetter\";\nimport React from \"react\";\nimport {stringToCharList} from \"./stringToCharList\";\n\nfunction evaluateLetters(guess: string, correctAnswer: string, fakeLetters: string[]) {\n  const letters = stringToCharList(correctAnswer);\n  let remainingLetters: string[] = [...letters, ...fakeLetters];\n  return stringToCharList(guess).map((guessLetter, index) => {\n    const notWrong = remainingLetters.includes(guessLetter);\n    if (notWrong) {\n      const index = remainingLetters.findIndex((c) => c === guessLetter)\n      remainingLetters.splice(index, 1)\n    }\n    const guessed = guessLetter === letters[index];\n    return { guessLetter, guessed , wrong: !notWrong};\n  });\n}\n\n/**\n * Generates a row of letters with the correct letters highlighted in green and the letters not included in answer in red.\n *\n * todo: when you use multiple of a letter and a later one is green, the earlier ones should maybe be red?\n * @param guess\n * @param correctAnswer\n */\nexport function generateGuessRow(guess: string, correctAnswer: string, fakeLetters: string[]) {\n  return (<>{evaluateLetters(guess, correctAnswer, fakeLetters).map(({guessLetter, guessed, wrong}, index) => {\n    const backgroundColor = guessed ? \"green\" : wrong ? \"red\" : undefined;\n    return <HintLetter letter={guessLetter} backgroundColor={backgroundColor} key={index} />;\n  })}</>);\n}","export function compareStrings(str1: string, str2:string): boolean {\n  //add more whitespace?\n  return str1.toLowerCase().replace(' ', '').trim() === str2.toLowerCase().replace(' ', '').trim();\n}","import {Typography} from \"@mui/material\";\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport {compareStrings} from \"./letters/compareStrings\";\n\nconst CenterPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\ninterface Props {\n  correctAnswer: string;\n  lastGuess: string;\n}\n//TODO gör en share knapp (bara för daily quiz?)\nexport const Finished = ({correctAnswer, lastGuess}: Props) => {\n  const correct =  compareStrings(lastGuess, correctAnswer);\n  return (\n    <CenterPage>\n      {correct ? (\n        <>\n          <Typography variant=\"body1\"> {correctAnswer}</Typography>\n          <h1>Good job!</h1>\n        </>\n    ) : (\n      <>\n        <Typography variant=\"body1\"> {correctAnswer}</Typography>\n        <h1>So close! Better luck next time...</h1>\n      </>\n    )}\n    </CenterPage>\n  );\n};","import React, {FormEvent, useMemo, useState} from 'react';\nimport {shuffle} from \"./shuffle\";\nimport styled from \"@emotion/styled\";\nimport {Button, Input, Typography} from \"@mui/material\";\nimport {generateActiveRow} from \"./letters/generateActiveRow\";\nimport {stringToCharList} from \"./letters/stringToCharList\";\nimport {generateGuessRow} from \"./letters/generateGuessRow\";\nimport {compareStrings} from \"./letters/compareStrings\";\nimport {randomString} from \"./letters/randomString\";\nimport {Finished} from \"./Finished\";\n\nconst Row = styled.div`\n  display: inline-block;\n`;\nconst CenterPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  `;\nconst Page = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  align-items: flex-start;\n  margin-top: 50px;\n`;\n\ninterface Props {\n  correctAnswer: string;\n  initMissingLetters: number;\n  initFakeLetters: number;\n}\n\nexport const Bandagram = ({correctAnswer, initMissingLetters, initFakeLetters}: Props) => {\n  const [guesses, setGuesses] = useState<string[]>([])\n  const [text, setText] = React.useState('');\n  const [missingLetters, setMissingLetters] = useState(initMissingLetters)\n  const [noFakeLetters, setNoFakeLetters] = useState(initFakeLetters)\n\n  //Overusing useMemo to avoid activeRow re-renders when typing\n  const correctLetters = useMemo((): string[] => {\n    return shuffle(stringToCharList(correctAnswer.toLowerCase()));\n  }, [correctAnswer])\n  const letters = useMemo(() => {\n    return missingLetters > 0 ? correctLetters.slice(0, -missingLetters) : correctLetters\n  }, [missingLetters, correctLetters]);\n  const allFakeLetters = useMemo((): string[] => {\n    return stringToCharList(randomString(initFakeLetters));\n  }, [initFakeLetters])\n  const fakeLetters = useMemo(() => {\n    return allFakeLetters.slice(0, noFakeLetters);\n  }, [noFakeLetters, allFakeLetters]);\n  const allLetters = useMemo(() => {\n    return shuffle([...letters, ...fakeLetters]);\n  }, [letters, fakeLetters]);\n  const onGuess = (event: FormEvent) => {\n    event.preventDefault()\n    if (guesses.length % 2 === 0 && noFakeLetters > 0) {\n      setNoFakeLetters(noFakeLetters - 1);\n    }\n    if (guesses.length % 2 === 1 && missingLetters > 0) {\n      setMissingLetters(missingLetters - 1);\n    }\n    setGuesses([...guesses, text])\n    setText('')\n  }\n  const gameOver = (guesses.length && compareStrings(guesses[guesses.length - 1], correctAnswer)) || guesses.length > 5;\n\n  return (\n    <CenterPage>\n      <Page >\n        {guesses.map((guess, i) => {\n          return (<Row key={i}>\n            {generateGuessRow(guess, correctAnswer, fakeLetters)}\n          </Row>)\n        })}\n        {gameOver ?\n          (<Finished correctAnswer={correctAnswer} lastGuess={guesses[guesses.length - 1]}/>) :\n          (<>\n            <Typography variant=\"body2\" align=\"center\" sx={{fontSize: 12}}>\n              Missing letters: {missingLetters} Fake letters: {noFakeLetters}\n            </Typography>\n            <Row>\n              {generateActiveRow(text, allLetters)}\n            </Row>\n            <form onSubmit={onGuess}>\n              <Input style={{maxWidth: 300, width: '100%'}} value={text} onChange={(event) => setText(event.target.value)} />\n              <Button type=\"submit\" onClick={onGuess}>Guess</Button>\n            </form>\n          </>)\n        }\n      </Page>\n    </CenterPage>\n  );\n}","export function randomString(length: number): string {\n  let text = \"\";\n  const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n  for (let i = 0; i < length; i++)\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n  return text;\n}","//Band från quizzen på mellan 7 och 11 bokstäver\nexport const bandNames = [\n  'Lady Gaga',\n  'Miley Cyrus',\n  'Taylor Swift',\n  'Ed Sheeran',\n  'No Doubt',\n  'Elton John',\n  'Green Day',\n  'Icona Pop',\n  'Lana Del Rey',\n  'Nirvana',\n  'The Beatles',\n  'Alice Cooper',\n  'David Bowie',\n  'Harry Styles',\n  'Johnny Cash',\n  'Linkin Park',\n  'Madonna',\n  'Manu Chao',\n  'Nickelback',\n  'YUNGBLUD',\n  'A*Teens',\n  'Ace of Base',\n  'Aerosmith',\n  'Bee Gees',\n  'blink-182',\n  'Bon Jovi',\n  'Bright Eyes',\n  'Bryan Adams',\n  'Céline Dion',\n  'Dire Straits',\n  'Ebba Grön',\n  'Erasure',\n  'Eric Clapton',\n  'Foo Fighters',\n  'Gorillaz',\n  'Imperiet',\n  'Jan Johansen',\n  'Juice WRLD',\n  'Lambretta',\n  'Lily Allen',\n  'Maskinen',\n  'Meat Loaf',\n  'Patti Smith',\n  'Paul Simon',\n  'Ramones',\n  'Shakira',\n  'Shawn Mendes',\n  'Tenacious D',\n  'The Police',\n  'Tina Turner',\n  'Tomas Ledin',\n  'Zara Larsson',\n  '24kGoldn',\n  'Aaron Carter',\n  'Adam Lambert',\n  'Afroman',\n  'Ansiktet',\n  'Arvingarna',\n  'Billy Joel',\n  'Blondie',\n  'Bolaget',\n  'Bonnie Tyler',\n  'Caesars',\n  'Coldplay',\n  'Daddy Yankee',\n  'Daft Punk',\n  'Diana Ross',\n  'Die Antwoord',\n  'Disturbed',\n  'Doja Cat',\n  'Dolly Parton',\n  'Donna Summer',\n  'Dua Lipa',\n  'Eurythmics',\n  'Faith Hill',\n  'Fall Out Boy',\n  'Far & Son',\n  'Fatboy Slim',\n  'First Aid Kit',\n  'Fools Garden',\n  'Glee Cast',\n  'Guns N Roses',\n  'Iggy Azalea',\n  'In Flames',\n  'Irene Cara',\n  'Iron Maiden',\n  'Jeff Buckley',\n  'John Lennon',\n  'Kate Bush',\n  'Katy Perry',\n  'Kid Rock',\n  'Kim Carnes',\n  'Lasse Holm',\n  'Lazlo Bane',\n  'LeAnn Rimes',\n  'Led Zeppelin',\n  'Limp Bizkit',\n  'Lisa Ekdahl',\n  'Madness',\n  'Melody Club',\n  'Neil Diamond',\n  'Nicki Minaj',\n  'Outkast',\n  'Papa Roach',\n  'Peps Persson',\n  'Pet Shop Boys',\n  'Radiohead',\n  'Reel Big Fish',\n  'Rick Astley',\n  'Ricky Martin',\n  'Rihanna',\n  'Roxette',\n  'Run–D.M.C.',\n  'Ryan Adams',\n  'September',\n  'Sex Pistols',\n  'Simple Plan',\n  'Smash Mouth',\n  'Snow Patrol',\n  'Survivor',\n  'Teddybears',\n  'The Killers',\n  'The Kooks',\n  'The Rasmus',\n  'The Weeknd',\n  'Timbuktu',\n  'Van Morrison',\n  'Vance Joy',\n  'Volbeat',\n  'Westlife',\n  'Young MC',\n  '2 Unlimited',\n  '4 Non Blondes',\n  'Aaliyah',\n  'Adam Tensta',\n  'Alessia Cara',\n  'All Saints',\n  'America',\n  'Anastacia',\n  'Ane Brun',\n  'Anna Book',\n  'Anti-Flag',\n  'Architects',\n  'AWOLNATION',\n  'B*Witched',\n  'Bad Religion',\n  'Barbados',\n  'Bastille',\n  'Beastie Boys',\n  'Beyoncé',\n  'Billy Paul',\n  'Billy Talent',\n  'Bruno Mars',\n  'Caramell',\n  'Cascada',\n  'Chuck Berry',\n  'Clara Mae',\n  'Clean Bandit',\n  'Cornershop',\n  'Crazy Town',\n  'Cutting Crew',\n  'Cyndi Lauper',\n  'Cypress Hill',\n  'Def Leppard',\n  'Del Amitri',\n  'Docent Död',\n  'Don McLean',\n  'Don Omar',\n  'Drömhus',\n  'Echosmith',\n  'Eddie Murphy',\n  'Édith Piaf',\n  'Eiffel 65',\n  'Eldkvarn',\n  'Elov & Beny',\n  'Emma Bunton',\n  'Eric Carmen',\n  'Eric Saade',\n  'Familjen',\n  'Flo Rida',\n  'Flobots',\n  'Foreigner',\n  'Freestyle',\n  'Frej Larsson',\n  'Friends',\n  'Gary Portnoy',\n  'Gavin DeGraw',\n  'George Ezra',\n  'Girls Aloud',\n  'Günther',\n  'Gwen Stefani',\n  'Haddaway',\n  'Halestorm',\n  'Hans Zimmer',\n  'Hilary Duff',\n  'Hoobastank',\n  'Hugh Grant',\n  'iann dior',\n  'Ice Cube',\n  'Iggy Pop',\n  'Imogen Heap',\n  'Iron & Wine',\n  'Jace Everett',\n  'James Blunt',\n  'Jason Mraz',\n  'Jean Stout',\n  'Jessie J',\n  'Jimmy Cliff',\n  'Joe Cocker',\n  'John Denver',\n  'John Farnham',\n  'Journey',\n  'Kanye West',\n  'Keala Settle',\n  'Kid Cudi',\n  'Kim Wilde',\n  'Kings of Leon',\n  'Lil Wayne',\n  'Lisa Nilsson',\n  'Lou Reed',\n  'Luis Fonsi',\n  'Lykke Li',\n  'Magnum Bonum',\n  'Måneskin',\n  'Marc Cohn',\n  'Maria Mena',\n  'Mark Ronson',\n  'Marvin Gaye',\n  'Masked Wolf',\n  'Mattafix',\n  'Men At Work',\n  'Metallica',\n  'MexicoFALLZ',\n  'Midnight Oil',\n  'Millencolin',\n  'Modest Mouse',\n  'Molly Sandén',\n  'Mötley Crüe',\n  'Nat King Cole',\n  'Nazareth',\n  'Nick Jonas',\n  'Nine Days',\n  'Norlie & KKV',\n  'Owl City',\n  'Paramore',\n  'Paris Hilton',\n  'Pat Benatar',\n  'Peaches',\n  'Per Gessle',\n  'Peter LeMarc',\n  'Phil Collins',\n  'Quinn XCII',\n  'Rammstein',\n  'Robin Cook',\n  'Rod Stewart',\n  'Roffe Ruff',\n  'Roy Orbison',\n  'Sabaton',\n  'Säkert!',\n  'Salt-N-Pepa',\n  'Saweetie',\n  'Scorpions',\n  'Shania Twain',\n  'Shebang',\n  'Sheppard',\n  'Snoop Dogg',\n  'Sonny & Cher',\n  'Soulja Boy',\n  'Spice Girls',\n  'Stevie Nicks',\n  'Sugarcult',\n  'Suzanne Vega',\n  't.A.T.u.',\n  'Take That',\n  'Taylor Dayne',\n  'The 1975',\n  'The Animals',\n  'The Clash',\n  'The Coral',\n  'The Corrs',\n  'The Cure',\n  'The Darkness',\n  'The Hives',\n  'The Jackson 5',\n  'The Kid LAROI',\n  'The Kinks',\n  'The Knack',\n  'The Pierces',\n  'The Script',\n  'The Sounds',\n  'The Verve',\n  'The Wombats',\n  'Tom Jones',\n  'Tom Petty',\n  'Tone Norum',\n  'Tones And I',\n  'Toy-Box',\n  'Transplants',\n  'Travie McCoy',\n  'Van Halen',\n  'Vengaboys',\n  'Vitamin C',\n  'Wet Wet Wet',\n  'Wheatus',\n  'Wiktoria',\n  'Will Ferrell',\n  'Will Smith',\n  'Yellowcard',\n  'You Me At Six',\n  'Zach Sobiech'\n  ];\n","import './App.css';\nimport {Bandagram} from \"./bandagram/bandagram\";\nimport React, {useMemo} from 'react';\nimport {bandNames} from \"./bandagram/data/properlengthbands\";\n\n//TODO välj mellan träna och daily quiz\nfunction App() {\n  const correctAnswer = useMemo(() => {\n    return bandNames[Math.floor(Math.random() * bandNames.length)];\n  }, []);\n  return (\n    <div className=\"App\">\n      <Bandagram correctAnswer={correctAnswer} initMissingLetters={2} initFakeLetters={2}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}